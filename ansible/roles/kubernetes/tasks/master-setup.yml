---
- name: Initialize Kubernetes master with kubeadm init
  shell: |
    kubeadm init --control-plane-endpoint {{ control_plane_endpoint }} --upload-certs --certificate-key {{ certificate_key }}
  register: kubeadmin_init
  when: (not kubernetes_init_stat.stat.exists) 

- name: Print the init output to screen.
  debug:
    msg: kubeadmin_init.stdout
  when: not kubernetes_init_stat.stat.exists

- name: Ensure .kube directory exists.
  file:
    path: ~/.kube
    state: directory
    mode: 0700

- name: Symlink the kubectl admin.conf to ~/.kube/conf.
  file:
    src: /etc/kubernetes/admin.conf
    dest: ~/.kube/config
    state: link
    mode: 0600

- name: Configure Flannel networking.
  command: "{{ item }}"
  with_items:
    - kubectl apply -f {{ kubernetes_flannel_manifest_file_rbac }}
    - kubectl apply -f {{ kubernetes_flannel_manifest_file }}
  register: flannel_result
  changed_when: "'created' in flannel_result.stdout"
  when: kubernetes_pod_network.cni == 'flannel'

- name: Configure Calico networking.
  command: "{{ item }}"
  with_items:
    - kubectl apply -f {{ kubernetes_calico_manifest_file }}
  register: calico_result
  changed_when: "'created' in calico_result.stdout"
  when: kubernetes_pod_network.cni == 'calico'

- name: Get Kubernetes version for Weave installation.
  shell: kubectl version | base64 | tr -d '\n'
  changed_when: false
  register: kubectl_version
  when: kubernetes_pod_network.cni == 'weave'

- name: Configure Weave networking.
  command: "{{ item }}"
  with_items:
    - "kubectl apply -f https://cloud.weave.works/k8s/net?k8s-version={{ kubectl_version.stdout_lines[0] }}"
  register: weave_result
  changed_when: "'created' in weave_result.stdout"
  when: kubernetes_pod_network.cni == 'weave'

- name: Install longhorn cloud storage
  shell: |
    kubectl apply -f https://raw.githubusercontent.com/longhorn/longhorn/{{ longhorn_version }}/deploy/longhorn.yaml
  register: longhorn_result 
  changed_when: "'created' in longhorn_result.stdout"